CarHide = {}CarHide.status = 0CarHide.noFadeList = {425, 430, 432, 447, 464, 476, 520}CarHide.MAX_DIST = 35CarHide.MIN_DIST = 22CarHide.MIN_ALPHA = 20function CarHide.join()	local arenaElement = getElementParent(localPlayer)	if not getElementData(arenaElement, "GhostMode") then return end	outputChatBox('Car fade and hiding are available. Press #00FF00F2 #00ffffto switch between them.', 0, 255, 255, true)endaddEvent("onClientPlayerJoinArena", true)addEventHandler("onClientPlayerJoinArena", localPlayer, CarHide.join)function CarHide.reset()	removeEventHandler('onClientRender', root, CarHide.render)		local arenaElement = getElementParent(localPlayer)	for i, player in ipairs(exports["CCS"]:export_getPlayersInArena(arenaElement)) do			local playerVehicle = getPedOccupiedVehicle(player)			if playerVehicle then					setElementDimension(playerVehicle, getElementDimension(arenaElement))			setElementAlpha(playerVehicle, 255)					end					setElementAlpha(player, 255)		setElementDimension(player, getElementDimension(arenaElement))	end		if eventName == "onClientPlayerLeaveArena" then			CarHide.status = 0		end	endaddEvent("onClientPlayerLeaveArena", true)addEventHandler("onClientPlayerLeaveArena", localPlayer, CarHide.reset)addEventHandler("onClientPlayerWasted", localPlayer, CarHide.reset)function CarHide.toggle()	local arenaElement = getElementParent(localPlayer)	if not getElementData(arenaElement, 'GhostMode') then return end	if CarHide.status == 0 then		CarHide.reset()		addEventHandler('onClientRender', root, CarHide.render)		outputChatBox('#FF6464Car fade #00FF00[ON] #FF6464Car hiding #FF0000[OFF]', 255, 100, 100, true)		CarHide.status = 1		elseif CarHide.status == 1 then		CarHide.reset()		addEventHandler('onClientRender', root, CarHide.render)		outputChatBox('#FF6464Car fade #FF0000[OFF] #FF6464Car hiding #00FF00[ON]', 255, 100, 100, true)		CarHide.status = 2			elseif CarHide.status == 2 then			CarHide.reset()		outputChatBox('#FF6464Car fade #FF0000[OFF] #FF6464Car hiding #FF0000[OFF]', 255, 100, 100, true)		CarHide.status = 0	end	endbindKey('F2', 'down', CarHide.toggle)function CarHide.autoToggle()	local arenaElement = getElementParent(localPlayer)	if not getElementData(arenaElement, 'GhostMode') then return end			if CarHide.status == 0 then return end	CarHide.reset()	addEventHandler('onClientRender', root, CarHide.render)endaddEvent("onClientMapChange", true)addEventHandler("onClientMapChange", root, CarHide.autoToggle)function CarHide.render()	local target = getCameraTarget()	if not target then return end		if getElementType(target) == "vehicle" then			target = getVehicleOccupant(target)			end		if not target then return end	local vehicle = getPedOccupiedVehicle(target)		if not vehicle then return end		local arenaElement = getElementParent(localPlayer)	if target == localPlayer then			if exports["CCS"]:export_table_contains(CarHide.noFadeList, getElementModel(vehicle)) or not getElementData(arenaElement, 'GhostMode') then					CarHide.reset()			return 					end			end		if CarHide.status == 2 then			for i, player in pairs(exports["CCS"]:export_getPlayersInArena(arenaElement)) do					if player ~= target then				local playerVehicle = getPedOccupiedVehicle(player)								if playerVehicle then										if exports["CCS"]:export_table_contains(CarHide.noFadeList, getElementModel(playerVehicle)) then											setElementDimension(player, getElementDimension(arenaElement))						setElementDimension(playerVehicle, getElementDimension(arenaElement))											else											setElementDimension(player, 100)						setElementDimension(playerVehicle, 100)											end									else									setElementDimension(player, getElementDimension(arenaElement))									end							else							local playerVehicle = getPedOccupiedVehicle(player)								if playerVehicle then											setElementDimension(playerVehicle, getElementDimension(arenaElement))											end									setElementDimension(player, getElementDimension(arenaElement))								end					end		elseif CarHide.status == 1 then			local posX, posY, posZ = getElementPosition(vehicle)				local camX, camY, camZ = getCameraMatrix()				for i, player in pairs(exports["CCS"]:export_getPlayersInArena(arenaElement)) do					if player ~= target then				local vehicle = getPedOccupiedVehicle(player)								if vehicle then									local alpha = 255					local x, y, z = getElementPosition(vehicle)					local playerDist = getDistanceBetweenPoints3D(posX, posY, posZ, x, y, z)					local camDist = getDistanceBetweenPoints3D(camX, camY, camZ, x, y, z)										if playerDist <= CarHide.MIN_DIST or camDist <= CarHide.MIN_DIST then 											alpha = CarHide.MIN_ALPHA 											end										local alpha_dist = playerDist / CarHide.MAX_DIST										if alpha_dist >= 0 then											alpha = alpha_dist * 255												if alpha > 255 then 													alpha = 255													elseif alpha < CarHide.MIN_ALPHA then 													alpha = CarHide.MIN_ALPHA 													end											end										setElementAlpha(vehicle, alpha)					setElementAlpha(player, alpha)									else									setElementAlpha(player, 255)									end							else							local playerVehicle = getPedOccupiedVehicle(player)								if playerVehicle then											setElementDimension(playerVehicle, getElementDimension(arenaElement))											end									setElementDimension(player, getElementDimension(arenaElement))								end					end		end	end